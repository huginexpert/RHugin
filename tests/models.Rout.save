
R version 2.15.3 (2013-03-01) -- "Security Blanket"
Copyright (C) 2013 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-apple-darwin9.8.0/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(RHugin)
Loading required package: Rgraphviz
Loading required package: graph
Loading required package: grid
> 
> 
> # Create an RHugin domain
> applesd <- hugin.domain()
> 
> # Add nodes
> add.node(applesd, "Sick", states = 0:1)
> add.node(applesd, "Dry", states = 0:1)
> add.node(applesd, "Loses", states = 0:1)
> 
> # Add edges
> add.edge(applesd, "Loses", "Sick")
> add.edge(applesd, "Loses", "Dry")
> 
> sick.model <- get.model(applesd, "Sick", character(0))
> sick.model$Expression <- "Binomial (1, 0.1)"
> set.model(applesd, "Sick", sick.model)
> 
> dry.model <- get.model(applesd, "Dry", character(0))
> dry.model$Expression <- "Binomial (1, 0.1)"
> set.model(applesd, "Dry", dry.model)
> 
> loses.model <- get.model(applesd, "Loses", c("Sick", "Dry"))
> loses.model$Expression[1] <- "Binomial (1, 0.02)"
> loses.model$Expression[2] <- "Binomial (1, 0.85)"
> loses.model$Expression[3] <- "Binomial (1, 0.9)"
> loses.model$Expression[4] <- "Binomial (1, 0.95)"
> set.model(applesd, "Loses", loses.model)
> 
> all.equal(loses.model, get.model(applesd, "Loses"))
[1] TRUE
> 
> 
> ################################################################################
> 
> 
> # Create an RHugin domain
> appleds <- hugin.domain()
> 
> # Add nodes
> add.node(appleds, "Sick", states = 0:1)
> add.node(appleds, "Dry", states = 0:1)
> add.node(appleds, "Loses", states = 0:1)
> 
> # Add edges
> add.edge(appleds, "Loses", "Sick")
> add.edge(appleds, "Loses", "Dry")
> 
> sick.model <- get.model(appleds, "Sick", character(0))
> sick.model$Expression <- "Binomial (1, 0.1)"
> set.model(appleds, "Sick", sick.model)
> 
> dry.model <- get.model(appleds, "Dry", character(0))
> dry.model$Expression <- "Binomial (1, 0.1)"
> set.model(appleds, "Dry", dry.model)
> 
> loses.model <- get.model(appleds, "Loses", c("Dry", "Sick"))
> loses.model$Expression[1] <- "Binomial (1, 0.02)"
> loses.model$Expression[2] <- "Binomial (1, 0.9)"
> loses.model$Expression[3] <- "Binomial (1, 0.85)"
> loses.model$Expression[4] <- "Binomial (1, 0.95)"
> set.model(appleds, "Loses", loses.model)
> 
> all.equal(loses.model, get.model(appleds, "Loses"))
[1] TRUE
> 
> 
> ################################################################################
> 
> 
> generate.table(applesd, "Loses")
> sd.table <- get.table(applesd, "Loses")
> print(sd.table)
  Loses Sick Dry Freq
1     0    0   0 0.98
2     1    0   0 0.02
3     0    1   0 0.10
4     1    1   0 0.90
5     0    0   1 0.15
6     1    0   1 0.85
7     0    1   1 0.05
8     1    1   1 0.95
> 
> generate.table(appleds, "Loses")
> ds.table <- get.table(appleds, "Loses")
> print(ds.table)
  Loses Sick Dry Freq
1     0    0   0 0.98
2     1    0   0 0.02
3     0    1   0 0.10
4     1    1   0 0.90
5     0    0   1 0.15
6     1    0   1 0.85
7     0    1   1 0.05
8     1    1   1 0.95
> 
> all.equal(sd.table, ds.table)
[1] TRUE
> 
> 
> 
> proc.time()
   user  system elapsed 
  0.705   0.027   0.718 
